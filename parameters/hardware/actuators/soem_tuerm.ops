########################################################################
#                                                                      #
# Simple Open EtherCAT Master (SOEM) deployer file 				   	   #
#                                                                      #
########################################################################

#### IMPORT PACKAGE ####
import("rtt_ros")
ros.import("sergio_hardware")

#### DECLARATION OF PARAMETERS ####
var double 	Ts = 0.001
var string LEFT_ARM_SHOULDER 	= "Soem.Slave_1002"
var string LEFT_ARM_UPPERARM 	= "Soem.Slave_1003"
var string LEFT_ARM_LOWERARM 	= "Soem.Slave_1004"
var string  ROBOT 				= "/sergio";

#### MAKING PARAMETERS GLOBAL ####
loadService("HARDWARE","os")
os.setenv("LEFT_ARM_SHOULDER",	LEFT_ARM_SHOULDER)
os.setenv("LEFT_ARM_UPPERARM",	LEFT_ARM_UPPERARM)
os.setenv("LEFT_ARM_LOWERARM",	LEFT_ARM_LOWERARM)
os.setenv("ROBOT",	ROBOT)

#### LOAD SUPERVISOR ###
# TODO correct ports if dashboard is adjusted
loadComponent("Supervisor","SUPERVISORY::Supervisor")
Supervisor.ebuttonorder	= strings("Wireless","Wired","Endswitch","Reset")
Supervisor.configure
setActivity("Supervisor",0.04,LowestPriority,ORO_SCHED_OTHER)
stream("Supervisor.ebuttonWireless", ros.topic(ROBOT+"/ebuttonWireless"));
stream("Supervisor.ebuttonWired", ros.topic(ROBOT+"/ebuttonWired"));
stream("Supervisor.ebuttonEndswitch", ros.topic(ROBOT+"/ebuttonEndswitch"));
stream("Supervisor.ebuttonReset", ros.topic(ROBOT+"/ebuttonReset"));
stream("Supervisor.rosshutdown", ros.topic(ROBOT+"/etherCAT_shutdown")); 
stream("Supervisor.rosetherCATenabled", ros.topic(ROBOT+"/etherCAT_enabled")); 
stream("Supervisor.hardware_status", ros.topic(ROBOT+"/hardware_status")); 
stream("Supervisor.dashboardCmd", ros.topic(ROBOT+"/dashboard_ctrlcmds")); 
stream("Supervisor.ebutton_status", ros.topic(ROBOT+"/ebutton_status"));

#### Create Robot Object ####
var strings DEFAULT_PART_NAMES = strings("left_arm");
Supervisor.CreateRobotObject("sergio", DEFAULT_PART_NAMES)

### LOAD SOEM COMPONENT FOR ETHERCAT COMMUNICATION ###
loadComponent("Soem","soem_master::SoemMasterComponent")
addPeer("Supervisor","Soem")
Soem.configure
setActivity("Soem",Ts,HighestPriority,ORO_SCHED_RT)
connect ("Soem.Slave_1002.encoder1", "Supervisor.serialRunning", ConnPolicy() ) ;

#### LOAD COMPONENT TO ENABLE ANALOG OUTS PERA ###
loadComponent("LTUERM_AnalogOuts","SOEM::AnalogOutsGeneric")
addPeer("Supervisor","LTUERM_AnalogOuts")
setActivity("LTUERM_AnalogOuts",0.0,HighestPriority,ORO_SCHED_RT)
LTUERM_AnalogOuts.numberofinports    				= 1
LTUERM_AnalogOuts.numberofoutports    				= 3
LTUERM_AnalogOuts.input_sizes 						= array (7.0)
LTUERM_AnalogOuts.output_sizes 						= array (3.0, 3.0, 3.0)
LTUERM_AnalogOuts.output_positions 					= array (1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)
LTUERM_AnalogOuts.configure
connect ("LTUERM_AnalogOuts.out1",LEFT_ARM_SHOULDER+".pwmDutyMotors", ConnPolicy() );
connect ("LTUERM_AnalogOuts.out2",LEFT_ARM_UPPERARM+".pwmDutyMotors", ConnPolicy() );
connect ("LTUERM_AnalogOuts.out3",LEFT_ARM_LOWERARM+".pwmDutyMotors", ConnPolicy() );

#### START COMPONENTS ####
Supervisor.AddAllwaysOnPeer ("Soem")
Supervisor.AddAllwaysOnPeer ("LTUERM_AnalogOuts")
Supervisor.start()
